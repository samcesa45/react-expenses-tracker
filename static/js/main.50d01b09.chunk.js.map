{"version":3,"sources":["components/UI/Card.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpensesFilter.js","components/Expenses/ExpensesDate.js","components/Expenses/ExpensesItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpenses/ExpensesForm.js","components/NewExpenses/NewExpenses.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","CharBar","barFillHeight","maxValue","Math","round","value","style","height","label","Chart","dataPointsValue","datapoints","map","datapoint","totalMaxValue","max","ChartBar","ExpensesChart","chartDataPoints","expenses","expense","date","getMonth","amount","ExpensesFilter","htmlFor","onChange","event","onSelectedFilterChange","target","selected","ExpensesDate","month","toLocaleString","day","year","getFullYear","ExpensesItem","title","ExpensesList","items","length","item","id","Expenses","useState","filteredYear","setFilteredYear","filteredExpenses","filter","toString","selectedYear","ExpensesForm","setTitle","setAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expensesData","Date","onSubmitData","onCancelEditing","type","step","min","onClick","NewExpenses","isEditing","setIsEditing","enteredExpenses","random","onAddExpenses","DEMO_EXPENSES","App","addExpenses","setAddExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.50d01b09.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../App.scss';\r\nconst Card = (props) => {\r\n\tlet classes = 'card ' + props.className;\r\n\treturn <div className={classes}>{props.children}</div>;\r\n};\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport '../../App.scss';\r\nconst CharBar = (props) => {\r\n\tlet barFillHeight = '0%';\r\n\tif (props.maxValue > 0) {\r\n\t\tbarFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"chart-bar\">\r\n\t\t\t<div className=\"chart-bar__inner\">\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"chart-bar__fill\"\r\n\t\t\t\t\tstyle={{ height: barFillHeight }}></div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"chart-bar__label\">{props.label}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default CharBar;\r\n","import React from 'react';\r\nimport ChartBar from './ChartBar';\r\nimport '../../App.scss';\r\nconst Chart = (props) => {\r\n\tconst dataPointsValue = props.datapoints.map((datapoint) => datapoint.value);\r\n\tconst totalMaxValue = Math.max(...dataPointsValue);\r\n\treturn (\r\n\t\t<div className=\"chart\">\r\n\t\t\t{props.datapoints.map((datapoint) => (\r\n\t\t\t\t<ChartBar\r\n\t\t\t\t\tkey={datapoint.label}\r\n\t\t\t\t\tlabel={datapoint.label}\r\n\t\t\t\t\tvalue={datapoint.value}\r\n\t\t\t\t\tmaxValue={totalMaxValue}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Chart;\r\n","import React from 'react';\r\nimport Chart from '../Chart/Chart';\r\nconst ExpensesChart = (props) => {\r\n\tconst chartDataPoints = [\r\n\t\t{ label: 'Jan', value: 0 },\r\n\t\t{ label: 'Feb', value: 0 },\r\n\t\t{ label: 'Mar', value: 0 },\r\n\t\t{ label: 'Apr', value: 0 },\r\n\t\t{ label: 'May', value: 0 },\r\n\t\t{ label: 'Jun', value: 0 },\r\n\t\t{ label: 'Jul', value: 0 },\r\n\t\t{ label: 'Aug', value: 0 },\r\n\t\t{ label: 'Sep', value: 0 },\r\n\t\t{ label: 'Oct', value: 0 },\r\n\t\t{ label: 'Nov', value: 0 },\r\n\t\t{ label: 'Dec', value: 0 },\r\n\t];\r\n\r\n\tfor (const expense of props.expenses) {\r\n\t\tconst expenseMonth = expense.date.getMonth();\r\n\t\tchartDataPoints[expenseMonth].value += +expense.amount;\r\n\t}\r\n\treturn <Chart datapoints={chartDataPoints} />;\r\n};\r\n\r\nexport default ExpensesChart;\r\n","import React from 'react';\r\nconst ExpensesFilter = (props) => {\r\n\tconst changeSelectedHandler = (event) => {\r\n\t\tprops.onSelectedFilterChange(event.target.value);\r\n\t};\r\n\treturn (\r\n\t\t<div className=\"expenses-filter\">\r\n\t\t\t<div className=\"expenses-filter__control\">\r\n\t\t\t\t<label htmlFor=\"filter\">filter by year</label>\r\n\t\t\t\t<select onChange={changeSelectedHandler} value={props.selected}>\r\n\t\t\t\t\t<option value=\"2022\">2022</option>\r\n\t\t\t\t\t<option value=\"2021\">2021</option>\r\n\t\t\t\t\t<option value=\"2020\">2020</option>\r\n\t\t\t\t\t<option value=\"2019\">2019</option>\r\n\t\t\t\t</select>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesFilter;\r\n","import React from 'react';\r\nimport '../../App.scss';\r\nconst ExpensesDate = (props) => {\r\n\tconst month = props.date.toLocaleString('en-US', { month: 'long' });\r\n\tconst day = props.date.toLocaleString('en-US', { day: '2-digit' });\r\n\tconst year = props.date.getFullYear();\r\n\treturn (\r\n\t\t<div className=\"expenses-date\">\r\n\t\t\t<div className=\"expenses-date__month\">{month}</div>\r\n\t\t\t<div className=\"expenses-date__day\">{day}</div>\r\n\t\t\t<div className=\"expenses-date__year\">{year}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExpensesDate;\r\n","import React from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesDate from './ExpensesDate';\r\nconst ExpensesItem = (props) => {\r\n\treturn (\r\n\t\t<li>\r\n\t\t\t<Card className=\"expenses-item\">\r\n\t\t\t\t<ExpensesDate date={props.date} />\r\n\t\t\t\t<div className=\"expenses-item__description\">\r\n\t\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t\t<div className=\"expenses-item__amount\">${props.amount}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Card>\r\n\t\t</li>\r\n\t);\r\n};\r\n\r\nexport default ExpensesItem;\r\n","import React from 'react';\r\nimport ExpensesItem from './ExpensesItem';\r\nimport '../../App.scss';\r\nconst ExpensesList = (props) => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn <h2 className=\"expenses-list__fallback\">No Expenses Found</h2>;\r\n\t}\r\n\treturn (\r\n\t\t<ul className=\"expenses-list\">\r\n\t\t\t{props.items.map((item) => (\r\n\t\t\t\t<ExpensesItem\r\n\t\t\t\t\tkey={item.id}\r\n\t\t\t\t\tdate={item.date}\r\n\t\t\t\t\ttitle={item.title}\r\n\t\t\t\t\tamount={item.amount}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ul>\r\n\t);\r\n};\r\n\r\nexport default ExpensesList;\r\n","import React, { useState } from 'react';\r\nimport Card from '../UI/Card';\r\nimport ExpensesChart from './ExpensesChart';\r\nimport ExpensesFilter from './ExpensesFilter';\r\nimport ExpensesList from './ExpensesList';\r\nconst Expenses = (props) => {\r\n\tconst [filteredYear, setFilteredYear] = useState('2020');\r\n\tconst filteredExpenses = props.expenses.filter((expense) => {\r\n\t\treturn expense.date.getFullYear().toString() === filteredYear;\r\n\t});\r\n\r\n\tconst selectedChangeHandler = (selectedYear) => setFilteredYear(selectedYear);\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Card className=\"expenses\">\r\n\t\t\t\t<ExpensesFilter\r\n\t\t\t\t\tonSelectedFilterChange={selectedChangeHandler}\r\n\t\t\t\t\tselected={filteredYear}\r\n\t\t\t\t/>\r\n\t\t\t\t<ExpensesChart expenses={filteredExpenses} />\r\n\t\t\t\t<ExpensesList items={filteredExpenses} />\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Expenses;\r\n","import React, { useState } from 'react';\r\nimport '../../App.scss';\r\nconst ExpensesForm = (props) => {\r\n\tconst [title, setTitle] = useState('');\r\n\tconst [amount, setAmount] = useState('');\r\n\tconst [enteredDate, setEnteredDate] = useState('');\r\n\r\n\tconst titleChangeHandler = (event) => setTitle(event.target.value);\r\n\tconst amountChangeHandler = (event) => setAmount(event.target.value);\r\n\tconst enteredDateChangeHandler = (event) =>\r\n\t\tsetEnteredDate(event.target.value);\r\n\r\n\tconst submitExpenseFormHandler = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst expensesData = {\r\n\t\t\ttitle: title,\r\n\t\t\tamount: amount,\r\n\t\t\tdate: new Date(enteredDate),\r\n\t\t};\r\n\t\tprops.onSubmitData(expensesData);\r\n\t\tsetTitle('');\r\n\t\tsetAmount('');\r\n\t\tsetEnteredDate('');\r\n\t\tprops.onCancelEditing();\r\n\t};\r\n\treturn (\r\n\t\t<form onSubmit={submitExpenseFormHandler}>\r\n\t\t\t<div className=\"expenses-form\">\r\n\t\t\t\t<div className=\"expenses-form__control\">\r\n\t\t\t\t\t<label htmlFor=\"Title\">Title</label>\r\n\t\t\t\t\t<input type=\"text\" onChange={titleChangeHandler} value={title} />\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"expenses-form__control\">\r\n\t\t\t\t\t<label htmlFor=\"Amount\">Amount</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\tstep=\"0.01\"\r\n\t\t\t\t\t\tmin=\"0.01\"\r\n\t\t\t\t\t\tonChange={amountChangeHandler}\r\n\t\t\t\t\t\tvalue={amount}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"expenses-form__control\">\r\n\t\t\t\t\t<label htmlFor=\"Date\">Date</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\tmin=\"01-01-2019\"\r\n\t\t\t\t\t\tmax=\"11-31-2022\"\r\n\t\t\t\t\t\tonChange={enteredDateChangeHandler}\r\n\t\t\t\t\t\tvalue={enteredDate}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"expenses-form__actions\">\r\n\t\t\t\t<button type=\"button\" onClick={props.onCancelEditing}>\r\n\t\t\t\t\tCancel Expense\r\n\t\t\t\t</button>\r\n\t\t\t\t<button type=\"submit\">Add Expense</button>\r\n\t\t\t</div>\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default ExpensesForm;\r\n","import React, { useState } from 'react';\r\nimport ExpensesForm from './ExpensesForm';\r\nimport '../../App.scss';\r\nconst NewExpenses = (props) => {\r\n\tconst [isEditing, setIsEditing] = useState(false);\r\n\tconst addExpensesHandler = (enteredExpenses) => {\r\n\t\tconst expensesData = {\r\n\t\t\t...enteredExpenses,\r\n\t\t\tid: Math.random().toString(),\r\n\t\t};\r\n\t\tprops.onAddExpenses(expensesData);\r\n\t};\r\n\tconst editNewFormHandler = () => setIsEditing(true);\r\n\tconst cancelEditingHandler = () => setIsEditing(false);\r\n\treturn (\r\n\t\t<div className=\"new-expenses\">\r\n\t\t\t{isEditing && (\r\n\t\t\t\t<ExpensesForm\r\n\t\t\t\t\tonSubmitData={addExpensesHandler}\r\n\t\t\t\t\tonCancelEditing={cancelEditingHandler}\r\n\t\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{!isEditing && (\r\n\t\t\t\t<button type=\"button\" onClick={editNewFormHandler}>\r\n\t\t\t\t\tAdd New Expenses\r\n\t\t\t\t</button>\r\n\t\t\t)}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default NewExpenses;\r\n","import React, { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpenses from './components/NewExpenses/NewExpenses';\n\nconst DEMO_EXPENSES = [\n\t{\n\t\tid: 'e1',\n\t\ttitle: 'Toilet Paper',\n\t\tamount: '94.21',\n\t\tdate: new Date(2021, 7, 8),\n\t},\n\t{ id: 'e2', title: 'New TV', amount: '799.49', date: new Date(2021, 7, 9) },\n\t{\n\t\tid: 'e3',\n\t\ttitle: 'Car Insurance',\n\t\tamount: '294.67',\n\t\tdate: new Date(2021, 7, 10),\n\t},\n\t{\n\t\tid: 'e4',\n\t\ttitle: 'new Desk (Wooden)',\n\t\tamount: '450',\n\t\tdate: new Date(2021, 7, 11),\n\t},\n];\nconst App = (props) => {\n\tconst [addExpenses, setAddExpenses] = useState(DEMO_EXPENSES);\n\tconst submitExpensesHandler = (expenses) => {\n\t\tsetAddExpenses((prevExpenses) => {\n\t\t\treturn [...prevExpenses, expenses];\n\t\t});\n\t};\n\treturn (\n\t\t<div>\n\t\t\t<NewExpenses onAddExpenses={submitExpensesHandler} />\n\t\t\t<Expenses expenses={addExpenses} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}